services:
  postgres:
    image: postgres:15-alpine
    container_name: entrip-postgres-local
    environment:
      POSTGRES_USER: entrip
      POSTGRES_PASSWORD: entrip
      POSTGRES_DB: entrip
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U entrip"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile.dev
    image: entrip-api:dev
    container_name: entrip-api-local
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env.local
    environment:
      DATABASE_URL: postgresql://entrip:entrip@postgres:5432/entrip?schema=public
      NODE_ENV: development
      PORT: 4000
    ports:
      - "4000:4000"
    volumes:
      # 전체 프로젝트 읽기 전용으로 마운트 (루트 node_modules 포함)
      - type: bind
        source: .
        target: /app
        consistency: cached
        read_only: true
      
      # API 소스만 read-write 오버레이 (hot-reload 용)
      - type: bind
        source: ./apps/api
        target: /app/apps/api
        consistency: cached
      
      # 익명 볼륨으로 node_modules 보호
      - /app/node_modules
      - /app/apps/api/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/healthz"]
      interval: 15s
      timeout: 5s
      retries: 4

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.dev
    image: entrip-web:dev
    container_name: entrip-web-local
    depends_on:
      api:
        condition: service_healthy
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NEXT_PUBLIC_WS_URL: ws://localhost:4000
      INTERNAL_API_URL: http://api:4000
      INTERNAL_WS_URL: ws://api:4000
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      # 전체 프로젝트 읽기 전용으로 마운트
      - type: bind
        source: .
        target: /app
        consistency: cached
        read_only: true
      
      # Web 소스만 read-write 오버레이 (hot-reload)
      - type: bind
        source: ./apps/web
        target: /app/apps/web
        consistency: cached
      
      # 패키지 소스도 마운트 (실시간 반영)
      - type: bind
        source: ./packages
        target: /app/packages
        consistency: cached
      
      # node_modules 보호
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/apps/web/.next

volumes:
  postgres_data: